{"version":3,"sources":["utills/uuidv4.ts","models/CanvasItemModel.ts","Canvas/index.tsx","models/CanvasItemHistory.ts","models/MockItems.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["uuidv4","replace","c","r","Math","random","toString","CanvasItemModel","svg","x","y","color","id","_xLoc","_yLoc","_scale","_path","_color","_id","_dClickX","_dClickY","_svg","this","Path2D","_movePath","transformMatrix","DOMMatrix","e","f","path","addPath","xLoc","yLoc","state","Canvas","items","setItems","selectedItems","setSelectedItems","history","rest","useState","clickedCord","setClickedCord","isDragging","setDraggingState","rerenderInterval","setRerenderInterval","canvasRef","useRef","getCanvasContext","useCallback","canvas","current","context","getContext","drawObjects","clearRect","width","height","Array","from","values","forEach","item","object","beginPath","fillStyle","shadowColor","shadowBlur","has","fill","closePath","start","window","setInterval","save","saveState","useLayoutEffect","setClickStartingPoint","stop","clearInterval","updateItems","states","newItems","Map","get","withMutations","map","set","restoreItem","keys","reset","cleanHistory","defaultSnapshot","undo","getRecentStates","handleUndo","handleReset","useEffect","checkIfItemInLocation","event","cbOnObject","cbNotOnObject","isPointInPath","offsetX","offsetY","startDragging","onMouseMove","moveItem","onMouseDown","ctrlKey","allItems","clear","onMouseUp","clearClickStartingPoint","addEventListener","removeEventListener","className","ref","onClick","CanvasItemHistory","_history","_defaultSnapshot","asMutable","setDefaultSnapshot","itemsStates","getState","push","pop","length","createMockItems","App","defaultState","useMemo","itemsString","localStorage","getItem","JSON","parse","itemState","handleImport","preventDefault","reader","FileReader","onload","a","target","result","newMap","asImmutable","value","files","readAsText","handleExport","selectedItemsArr","jsonString","stringify","blob","Blob","type","FileSaver","saveAs","handleExportAll","addDefaultFigures","mockItems","saveDefaultState","setItem","clearDefaultState","clearDefaultSnapshot","removeItem","deleteCb","key","isEmpty","deleteAll","htmlFor","onChange","style","marginTop","display","gap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da09277e.chunk.js","sourcesContent":["function uuidv4(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport default uuidv4;\n","import { CanvasItemState } from '../types';\nimport uuidv4 from '../utills/uuidv4';\n\nclass CanvasItemModel {\n  private _xLoc: number;\n  private _yLoc: number;\n  private _scale: number = 1;\n  private _path: Path2D;\n  private readonly _color: string;\n  private readonly _id: string;\n  private _dClickX: number = 0;\n  private _dClickY: number = 0;\n  private readonly _svg: string;\n\n  constructor(svg: string, x: number = 0, y: number = 0, color = 'black', id?: string) {\n    this._path = new Path2D(svg);\n    this._svg = svg;\n    this._xLoc = x;\n    this._yLoc = y;\n    this._color = color;\n    this._movePath();\n    this._id = id? id : uuidv4();\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  get path(): Path2D {\n    return this._path;\n  }\n\n  get scale(): number {\n    return this._scale;\n  }\n\n  get xLoc(): number {\n    return this._xLoc;\n  }\n\n  get yLoc(): number {\n    return this._yLoc;\n  }\n\n  private _movePath(x?: number, y?: number) {\n    const transformMatrix = new DOMMatrix();\n    transformMatrix.e = typeof x !== 'undefined' ? x - this._xLoc : this._xLoc;\n    transformMatrix.f = typeof y !== 'undefined' ? y - this._yLoc : this._yLoc;\n    transformMatrix.e -= this._dClickX;\n    transformMatrix.f -= this._dClickY;\n    const path = new Path2D();\n    path.addPath(this._path, transformMatrix);\n    this._path = path;\n  }\n\n  setClickStartingPoint(x: number, y: number) {\n    this._dClickX = x - this._xLoc;\n    this._dClickY = y - this._yLoc;\n  }\n\n  clearClickStartingPoint() {\n    this._dClickX = 0;\n    this._dClickY = 0;\n  }\n\n  moveItem(x: number, y: number) {\n    this._movePath(x, y);\n    this._xLoc = x - this._dClickX;\n    this._yLoc = y - this._dClickY;\n  }\n\n  getState() {\n    return {\n      svg: this._svg,\n      xLoc: this._xLoc,\n      yLoc: this._yLoc,\n      color: this._color\n    };\n  }\n\n  static restoreItem(state: CanvasItemState, id?: string) {\n    return new CanvasItemModel(state.svg, state.xLoc, state.yLoc, state.color, id);\n  }\n\n  restoreState(state: CanvasItemState) {\n    this._movePath(state.xLoc, state.yLoc);\n    this._xLoc = state.xLoc;\n    this._yLoc = state.yLoc;\n  }\n}\n\nexport default CanvasItemModel;\n","import {\n  HTMLAttributes,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState\n} from 'react';\nimport './styles.scss';\nimport CanvasItemModel from '../models/CanvasItemModel';\nimport 'normalize.css';\nimport { Map } from 'immutable';\nimport CanvasItemHistory from '../models/CanvasItemHistory';\nimport { CanvasItemState } from '../types';\n\ninterface CanvasProps extends HTMLAttributes<HTMLCanvasElement> {\n  items: Map<string, CanvasItemModel>;\n  history: CanvasItemHistory;\n  setItems: Function;\n  selectedItems: Map<string, CanvasItemModel>;\n  setSelectedItems: Function;\n}\n\nfunction Canvas({\n  items,\n  setItems,\n  selectedItems,\n  setSelectedItems,\n  history,\n  ...rest\n}: CanvasProps): JSX.Element {\n  const [clickedCord, setClickedCord] = useState<[number, number]>([0, 0]);\n  const [isDragging, setDraggingState] = useState<boolean>(false);\n  const [rerenderInterval, setRerenderInterval] = useState<number>();\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const getCanvasContext = useCallback(() => {\n    const canvas = canvasRef.current as HTMLCanvasElement;\n    const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n    return { canvas, context };\n  }, [canvasRef]);\n\n  const drawObjects = useCallback(() => {\n    const { context, canvas } = getCanvasContext();\n\n    const drawObject = (object: CanvasItemModel): void => {\n      context.beginPath();\n      context.fillStyle = object.color;\n      context.shadowColor = object.color;\n      context.shadowBlur = selectedItems.has(object.id) ? 16 : 0;\n      context.fill(object.path);\n      context.closePath();\n    };\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    Array.from(items.values()).forEach((item) => drawObject(item));\n  }, [getCanvasContext, items, selectedItems]);\n\n  const start = useCallback(() => {\n    setRerenderInterval(\n      window.setInterval(() => {\n        drawObjects();\n      }, 17)\n    );\n  }, [drawObjects]);\n\n  const save = useCallback(() => {\n    history.saveState(items);\n  }, [history, items]);\n\n  useLayoutEffect(() => {\n    if (clickedCord[0] && clickedCord[1]) {\n      selectedItems.forEach((item) => {\n        item.setClickStartingPoint(...clickedCord);\n      });\n    }\n  }, [selectedItems, clickedCord, drawObjects]);\n\n  const stop = useCallback(() => {\n    window.clearInterval(rerenderInterval);\n    drawObjects();\n  }, [rerenderInterval, drawObjects]);\n\n  const updateItems = useCallback(\n    (states: Map<string, CanvasItemState> | undefined) => {\n      if (states) {\n        let newItems = Map<string, CanvasItemModel>();\n        for (const id of Array.from(states.keys())) {\n          const state = states.get(id) as CanvasItemState;\n          newItems = newItems.withMutations((map) =>\n            map.set(id, CanvasItemModel.restoreItem(state, id))\n          );\n        }\n        setItems(newItems);\n      }\n    },\n    [setItems]\n  );\n\n  const reset = useCallback(() => {\n    history.cleanHistory();\n    updateItems(history.defaultSnapshot);\n  }, [history, updateItems]);\n\n  const undo = useCallback(() => {\n    updateItems(history.getRecentStates());\n  }, [history, updateItems]);\n\n  const handleUndo = useCallback(() => {\n    undo();\n    drawObjects();\n  }, [drawObjects, undo]);\n\n  const handleReset = useCallback(() => {\n    reset();\n    drawObjects();\n  }, [drawObjects, reset]);\n\n  useEffect(() => {\n    drawObjects();\n  }, [items, history, drawObjects]);\n\n  const checkIfItemInLocation = useCallback(\n    (event: MouseEvent, cbOnObject: Function, cbNotOnObject?: Function) => {\n      const { context } = getCanvasContext();\n      for (let item of Array.from(items.values())) {\n        if (context.isPointInPath(item.path, event.offsetX, event.offsetY)) {\n          return cbOnObject(event, item);\n        }\n      }\n      if (cbNotOnObject) {\n        cbNotOnObject(event);\n      }\n    },\n    [items, getCanvasContext]\n  );\n\n  const startDragging = useCallback(\n    (event: MouseEvent) => {\n      save();\n      setClickedCord([event.offsetX, event.offsetY]);\n      setDraggingState(true);\n      start();\n    },\n    [save, start]\n  );\n\n  const onMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (isDragging) {\n        selectedItems.forEach((item) => {\n          item.moveItem(event.offsetX, event.offsetY);\n        });\n      }\n    },\n    [isDragging, selectedItems]\n  );\n\n  const onMouseDown = useCallback(\n    (event: MouseEvent) => {\n      if (event.ctrlKey) {\n        return checkIfItemInLocation(\n          event,\n          (event: MouseEvent, item: CanvasItemModel) => {\n            setSelectedItems(selectedItems.set(item.id, item));\n            startDragging(event);\n          }\n        );\n      }\n      checkIfItemInLocation(\n        event,\n        (event: MouseEvent, item: CanvasItemModel) => {\n          const allItems = selectedItems.clear();\n          setSelectedItems(allItems.set(item.id, item));\n          startDragging(event);\n        },\n        () => {\n          setSelectedItems(selectedItems.clear());\n        }\n      );\n    },\n    [checkIfItemInLocation, selectedItems, setSelectedItems, startDragging]\n  );\n\n  const onMouseUp = useCallback(() => {\n    selectedItems.forEach((items) => items.clearClickStartingPoint());\n    setDraggingState(false);\n    stop();\n    setClickedCord([0, 0]);\n  }, [selectedItems, stop]);\n\n  useEffect(() => {\n    const { canvas } = getCanvasContext();\n\n    canvas.addEventListener('mousedown', onMouseDown);\n    canvas.addEventListener('mouseup', onMouseUp);\n    canvas.addEventListener('mousemove', onMouseMove);\n\n    return function () {\n      window.clearInterval(rerenderInterval);\n\n      canvas.removeEventListener('mousedown', onMouseDown);\n      canvas.removeEventListener('mouseup', onMouseUp);\n      canvas.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [getCanvasContext, onMouseDown, onMouseMove, onMouseUp, rerenderInterval]);\n\n  return (\n    <>\n      <div className={'canvas-container'}>\n        <canvas height={700} width={700} ref={canvasRef} {...rest} />\n      </div>\n      <div className={'buttons-container'}>\n        <button className={'ctrl-button'} onClick={handleUndo}>\n          Undo\n        </button>\n        <button className={'ctrl-button'} onClick={handleReset}>\n          Reset\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Canvas;\n","import CanvasItemModel from './CanvasItemModel';\nimport { CanvasItemState } from '../types';\nimport { Map } from 'immutable';\n\nclass CanvasItemHistory {\n  private _history: Map<string, CanvasItemState>[] = [];\n  private _defaultSnapshot = Map<string, CanvasItemState>().asMutable();\n\n  constructor(items?: Map<string, CanvasItemModel>) {\n    if (items) {\n      this.setDefaultSnapshot(items);\n    }\n  }\n\n  saveState(items: Map<string, CanvasItemModel>) {\n    const itemsStates = Map<string, CanvasItemState>().asMutable();\n    for (const id of Array.from(items.keys())) {\n      const item = items.get(id);\n      if (item) {\n        itemsStates.set(id, item.getState());\n      }\n    }\n    this._history.push(itemsStates);\n  }\n\n  getRecentStates() {\n    return this._history.pop();\n  }\n\n  setDefaultSnapshot(items: Map<string, CanvasItemModel>) {\n    const itemsStates = Map<string, CanvasItemState>().asMutable();\n    for (const id of Array.from(items.keys())) {\n      const item = items.get(id);\n      if (item) {\n        itemsStates.set(id, item.getState());\n      }\n    }\n    this._defaultSnapshot = itemsStates;\n  }\n\n  updateDefaultSnapshot(items: CanvasItemModel[]) {\n    for (const item of items) {\n      if (!this._defaultSnapshot.has(item.id)) {\n        this._defaultSnapshot.set(item.id, item.getState());\n      }\n    }\n  }\n\n  get defaultSnapshot() {\n    return this._defaultSnapshot;\n  }\n\n  clearDefaultSnapshot() {\n    this._defaultSnapshot.clear();\n  }\n\n  cleanHistory() {\n    this._history = [];\n  }\n\n  isHistoryEmpty() {\n    return !this._history.length;\n  }\n}\n\nexport default CanvasItemHistory;\n","import CanvasItemModel from './CanvasItemModel';\n\nconst item1 = 'M 0 0 L 40 5 V 145';\nconst item2 = 'M 100 100 V 0 H 200 V 100';\nconst item3 = 'M 0 0 A 25 25 90 0 0 25 50 A 25 25 90 0 0 0 0';\nconst item4 = 'M 0 131.25 L 105 131.25 L 52.5 26.25'\nconst item5 = 'M 0 0 L 192.5 0 C 157.5 23.3327 70 0 87.5 70'\nconst item6 = 'M 0 0 A 33.6 33.6 90 0 0 0 134.4';\nconst item7 = 'M 0 0 V 144 Q 96 96 192 192'\n\n\nconst createMockItems = () => {\n  return [\n    new CanvasItemModel(item1, 0, 0, 'red'),\n    new CanvasItemModel(item2, 150, 150),\n    new CanvasItemModel(item3, 200, 350, 'green'),\n    new CanvasItemModel(item4, 500, 410, 'blue'),\n    new CanvasItemModel(item5, 400, 400, 'orange'),\n    new CanvasItemModel(item6, 500, 500, 'darkcyan'),\n    new CanvasItemModel(item7, 600, 10, 'yellow')\n  ];\n}\n\n\nexport default createMockItems\n","import './App.scss';\nimport Canvas from './Canvas';\nimport { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport CanvasItemHistory from './models/CanvasItemHistory';\nimport CanvasItemModel from './models/CanvasItemModel';\nimport FileSaver from 'file-saver';\nimport createMockItems from './models/MockItems';\nimport { Map } from 'immutable';\nimport { CanvasItemState } from './types';\n\nfunction App() {\n\n  const defaultState = useMemo(() => {\n    const itemsString = localStorage.getItem('defaultState');\n    let items = Map<string, CanvasItemModel>();\n    if (itemsString) {\n      const itemsStates = JSON.parse(itemsString) as CanvasItemState[];\n      itemsStates.forEach((itemState) => {\n        const item = CanvasItemModel.restoreItem(itemState);\n        items = items.withMutations((map) => map.set(item.id, item));\n      });\n    }\n    return items;\n  }, []);\n\n  const [items, setItems] = useState<Map<string, CanvasItemModel>>(\n    defaultState\n  );\n  const [selectedItems, setSelectedItems] = useState<\n    Map<string, CanvasItemModel>\n  >(Map<string, CanvasItemModel>());\n  const history = useMemo(() => new CanvasItemHistory(items), []);\n\n  const handleImport = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault();\n      const reader = new FileReader();\n      reader.onload = async (e) => {\n        if (e?.target) {\n          const result = e.target.result as string;\n          const states = JSON.parse(result) as CanvasItemState[];\n          history.saveState(items);\n          const newItems = states.map((state) =>\n            CanvasItemModel.restoreItem(state)\n          );\n          let newMap = items.asImmutable();\n          newItems.forEach((item) =>\n            newMap = newMap.withMutations((map) => map.set(item.id, item))\n          );\n          setItems(newMap);\n          event.target.value = '';\n        }\n      };\n      const files = event.target.files as FileList;\n      reader.readAsText(files[0]);\n    },\n    [history, items]\n  );\n\n  const handleExport = useCallback(() => {\n    const selectedItemsArr = Array.from(selectedItems.values());\n\n    const jsonString = JSON.stringify(\n      selectedItemsArr.map((item) => item.getState())\n    );\n    const blob = new Blob([jsonString], { type: 'application/json' });\n    FileSaver.saveAs(blob, 'items.json');\n  }, [selectedItems]);\n\n  const handleExportAll = useCallback(() => {\n    const jsonString = JSON.stringify(items.map((item) => item.getState()));\n    const blob = new Blob([jsonString], { type: 'application/json' });\n    FileSaver.saveAs(blob, 'items.json');\n  }, [items]);\n\n  const addDefaultFigures = useCallback(() => {\n    const mockItems = createMockItems();\n    let newItems = items.asImmutable();\n    mockItems.forEach((item) =>\n      newItems = newItems.withMutations((map) => map.set(item.id, item))\n    );\n    setItems(newItems);\n  }, [items]);\n\n  const saveDefaultState = useCallback(() => {\n    const itemsString = JSON.stringify(\n      Array.from(items.values()).map((item) => item.getState())\n    );\n    history.setDefaultSnapshot(items);\n    localStorage.setItem('defaultState', itemsString);\n  }, [history, items]);\n\n  const clearDefaultState = useCallback(() => {\n    history.clearDefaultSnapshot()\n    localStorage.removeItem('defaultState');\n  }, [history]);\n\n  const deleteCb = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === 'Delete' && !selectedItems.isEmpty()) {\n        history.saveState(items);\n        setItems(items.deleteAll(selectedItems.keys()));\n        setSelectedItems(selectedItems.clear());\n      }\n    },\n    [history, items, selectedItems]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keypress', deleteCb);\n    return () => window.removeEventListener('keypress', deleteCb);\n  }, [deleteCb]);\n\n  return (\n    <div className=\"App\">\n      <div className={'import-export-container'}>\n        <div>\n          <label htmlFor={'import-item'} className=\"ctrl-button\">\n            Import\n          </label>\n          <input\n            id={'import-item'}\n            type={'file'}\n            className={'display-none'}\n            onChange={handleImport}\n          />\n        </div>\n        <button onClick={handleExport} className={'ctrl-button'}>\n          Export\n        </button>\n        <button onClick={handleExportAll} className={'ctrl-button'}>\n          Export All\n        </button>\n        <button className={'ctrl-button'} onClick={addDefaultFigures}>\n          Add Default Figures\n        </button>\n        <button onClick={saveDefaultState} className={'ctrl-button'}>\n          Save As Default\n        </button>\n        <button onClick={clearDefaultState} className={'ctrl-button'}>\n          Clear Default\n        </button>\n      </div>\n      <Canvas\n        selectedItems={selectedItems}\n        setSelectedItems={setSelectedItems}\n        items={items}\n        setItems={setItems}\n        history={history}\n      />\n      <div style={{ marginTop: '16px', display: 'flex', gap: '16px' }}>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}